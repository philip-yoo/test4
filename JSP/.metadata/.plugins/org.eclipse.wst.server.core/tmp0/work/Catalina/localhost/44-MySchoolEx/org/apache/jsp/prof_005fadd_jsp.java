/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.43
 * Generated at: 2020-11-04 07:39:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class prof_005fadd_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;



// 파라미터 수신에 사용할 문자셋 설정 (각 페이지당 최 상단에서 1회 설정)
request.setCharacterEncoding("UTF-8");

// 파라미터 받기
String prof_add = request.getParameter("prof_list");

// 화면에 출력할 결과 문자열
String result = null;

if (prof_add == null) {
   // 파라미터가 URL에 명시되지 않은 경우
   result = "응답 내용이 없습니다.";
   } else {
      // 파라미터가 URL에 명시 된 경우
      int user_select = 0;
      
      try {
         user_select = Integer.parseInt(prof_add);
      } catch (Exception e) {}
      
   }
   
      out.write("<!doctype html>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"utf-8\" />\r\n");
      out.write("    <title>교수정보추가</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css\" />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap-theme.min.css\" />\r\n");
      out.write("    <script src=\"http://code.jquery.com/jquery.min.js\"></script>\r\n");
      out.write("    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js\"\r\n");
      out.write("    ></script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("    <form name=\"myform\" method=\"post\" action=\"prof_add_ok.jsp\" role=\"form\">\r\n");
      out.write("    <fieldset>\r\n");
      out.write("    <legend>교수정보추가</legend>\r\n");
      out.write("    <div class=\"form-group\">\r\n");
      out.write("    <label for=\"name\">교수이름</label>\r\n");
      out.write("    <input type=\"text\" name=\"name\" id=\"name\"\r\n");
      out.write("    class=\"form-control\" />\r\n");
      out.write("    <label for=\"userid\">아이디</label>\r\n");
      out.write("    <input type=\"text\" name=\"userid\" id=\"userid\"\r\n");
      out.write("    class=\"form-control\" />\r\n");
      out.write("    <label for=\"position\">직급</label>\r\n");
      out.write("    <input type=\"text\" name=\"position\" id=\"position\"\r\n");
      out.write("    class=\"form-control\" />\r\n");
      out.write("    <label for=\"sal\">급여</label>\r\n");
      out.write("    <input type=\"text\" name=\"sal\" id=\"sal\"\r\n");
      out.write("    class=\"form-control\" />\r\n");
      out.write("    <label for=\"hiredate\">입사일</label>\r\n");
      out.write("    <input type=\"text\" name=\"hiredate\" id=\"hiredate\"\r\n");
      out.write("    class=\"form-control\" />\r\n");
      out.write("    <label for=\"comm\">보직수당</label>\r\n");
      out.write("    <input type=\"text\" name=\"comm\" id=\"comm\"\r\n");
      out.write("    class=\"form-control\" />\r\n");
      out.write("    <label for=\"deptno\">학과번호</label>\r\n");
      out.write("    <input type=\"text\" name=\"deptno\" id=\"deptno\"\r\n");
      out.write("    class=\"form-control\" />\r\n");
      out.write("    </div>\r\n");
      out.write("    <button type=\"submit\" class=\"btn btn-primary\">추가하기</button>\r\n");
      out.write("    </fieldset>\r\n");
      out.write("    </form>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
